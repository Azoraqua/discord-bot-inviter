{"version":3,"sources":["App.js","index.js"],"names":["App","enqueueSnackbar","useSnackbar","internalize","name","toLowerCase","replace","style","textAlign","Typography","variant","color","Link","href","marginTop","noValidate","autoComplete","onSubmit","e","preventDefault","clientId","document","getElementById","permissions","value","window","location","toString","handleSubmit","FormGroup","TextField","id","placeholder","marginLeft","transform","permission","map","p","FormControlLabel","control","Checkbox","data-permission","label","Button","type","IntegrationNotistack","maxSnack","ReactDOM","render"],"mappings":"4QAcA,SAASA,IAAO,IACLC,EAAmBC,cAAnBD,gBAMP,SAASE,EAAYC,GACjB,OAAOA,EAAKC,cAAcC,QAAQ,IAAK,KAqB3C,OACI,mCACI,gCACI,yBAAQC,MAAO,CAACC,UAAW,UAA3B,UACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAAMC,MAAO,YAAlC,iCACA,eAACF,EAAA,EAAD,CAAYC,QAAS,QAASH,MAAO,CAACI,MAAO,QAA7C,gBAAyD,cAACC,EAAA,EAAD,CAAMC,KAAM,8BACNF,MAAO,UADb,4BAI7D,sBAAMJ,MAAO,CAACO,UAAW,QAAzB,SACI,uBAAMC,YAAU,EAACC,aAAa,MAAMC,SAAU,SAAAC,GAAC,OAxB/D,SAAsBA,GAClBA,EAAEC,iBAEF,IAAMC,EAAWC,SAASC,eAAe,aACnCC,EAPC,EASgB,KAAnBH,EAASI,MAKbC,OAAOC,SAASb,KA5BC,iGA4BuBP,QAAQ,cAAec,EAASI,OAAOlB,QAAQ,gBAAiBiB,EAAYI,YAJhH1B,EAAgB,wBAAyB,CAACS,QAAS,UAiBQkB,CAAaV,IAAhE,UACI,2BAAUX,MAAO,CAACC,UAAW,UAA7B,UACI,+CAEA,cAACqB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAWC,GAAG,YAAYC,YAAa,kBAAmBrB,MAAO,mBAIzE,2BAAUJ,MAAO,CAACC,UAAW,SAAUM,UAAW,QAAlD,UACI,iDAEA,cAACe,EAAA,EAAD,CAAWtB,MAAO,CAAEC,UAAW,SAAUyB,WAAY,MAAOC,UAAW,oBAAvE,SAhDJ,CAChB,CAACH,GAAI,kBAAmB3B,KAAM,gBAAiB+B,WAAY,IAgDtBC,KAAI,SAAAC,GAAC,OACd,cAACC,EAAA,EAAD,CAEIC,QAAS,cAACC,EAAA,EAAD,CAAUT,GAAE,UAAK5B,EAAYkC,EAAEN,KAAO3B,KAAI,UAAKD,EAAYkC,EAAEN,KACnDU,kBAAA,UAAoBJ,EAAEF,cACzCO,MAAK,UAAKL,EAAEjC,OAJhB,UACYiC,EAAEN,aAS1B,cAACF,EAAA,EAAD,CAAWtB,MAAO,CAACO,UAAW,QAA9B,SACI,cAAC6B,EAAA,EAAD,CAAQC,KAAM,SAAUjC,MAAO,YAA/B,gCASb,SAASkC,IACpB,OACI,cAAC,IAAD,CAAkBC,SAAU,EAA5B,SACI,cAAC,EAAD,MCtFZC,IAASC,OACP,mCACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,W","file":"static/js/main.984b454d.chunk.js","sourcesContent":["import \"./App.css\";\n\nimport React from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport {SnackbarProvider, useSnackbar} from \"notistack\";\n\nconst DISCORD_AUTH_URL = \"https://discord.com/oauth2/authorize?client_id={CLIENT_ID}&scope=bot&permissions={PERMISSIONS}\";\n\nfunction App() {\n    const {enqueueSnackbar} = useSnackbar();\n\n    const PERMISSIONS = [\n        {id: 'p_administrator', name: 'Administrator', permission: 0x8}\n    ];\n\n    function internalize(name) {\n        return name.toLowerCase().replace(' ', '_');\n    }\n\n    function calculatePermissions() {\n        return 0;\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const clientId = document.getElementById('client_id');\n        const permissions = calculatePermissions();\n\n        if (clientId.value === '') {\n            enqueueSnackbar('Client ID is invalid.', {variant: 'error'});\n            return;\n        }\n\n        window.location.href = DISCORD_AUTH_URL.replace('{CLIENT_ID}', clientId.value).replace('{PERMISSIONS}', permissions.toString());\n    }\n\n    return (\n        <>\n            <div>\n                <header style={{textAlign: \"center\"}}>\n                    <Typography variant={\"h5\"} color={\"secondary\"}>Discord Bot Inviter</Typography>\n                    <Typography variant={\"body1\"} style={{color: '#ddd'}}>by <Link href={'https://github.com/Azoraqua'}\n                                                                                   color={\"primary\"}>Azoraqua</Link></Typography>\n                </header>\n\n                <main style={{marginTop: '35px'}}>\n                    <form noValidate autoComplete=\"off\" onSubmit={e => handleSubmit(e)}>\n                        <fieldset style={{textAlign: \"center\"}}>\n                            <legend>Client ID</legend>\n\n                            <FormGroup>\n                                <TextField id=\"client_id\" placeholder={\"000000000000000\"} color={\"secondary\"}/>\n                            </FormGroup>\n                        </fieldset>\n\n                        <fieldset style={{textAlign: \"center\", marginTop: '20px'}}>\n                            <legend>Permissions</legend>\n\n                            <FormGroup style={{ textAlign: 'center', marginLeft: '50%', transform: 'translateX(-70%)' }}>\n                                {PERMISSIONS.map(p => (\n                                    <FormControlLabel\n                                        key={`${p.id}`}\n                                        control={<Checkbox id={`${internalize(p.id)}`} name={`${internalize(p.id)}`}\n                                                           data-permission={`${p.permission}`}/>}\n                                        label={`${p.name}`}\n                                    />\n                                ))}\n                            </FormGroup>\n                        </fieldset>\n\n                        <FormGroup style={{marginTop: '30px'}}>\n                            <Button type={\"submit\"} color={\"secondary\"}>Invite</Button>\n                        </FormGroup>\n                    </form>\n                </main>\n            </div>\n        </>\n    );\n}\n\nexport default function IntegrationNotistack() {\n    return (\n        <SnackbarProvider maxSnack={3}>\n            <App/>\n        </SnackbarProvider>\n    )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","index.js"],"names":["App","enqueueSnackbar","useSnackbar","PERMISSIONS","general","id","name","permission","tfa","critical","text","voice","RECOMMENDED_PERMISSIONS","internalize","toLowerCase","replace","handleSubmit","e","preventDefault","clientId","document","getElementById","value","permissions","querySelectorAll","forEach","p","perm","getAttribute","children","checked","calculatePermissions","console","log","variant","window","location","href","toString","style","textAlign","Typography","color","Link","marginTop","noValidate","autoComplete","onSubmit","FormGroup","TextField","placeholder","Button","onClick","click","display","margin","map","FormControlLabel","className","control","Checkbox","data-permission","label","Badge","transform","title","backgroundColor","listStyle","marginLeft","marginBottom","fontSize","type","ReactDOM","render","maxSnack","preventDuplicate","autoHideDuration","domRoot"],"mappings":"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","file":"static/js/main.525865df.chunk.js","sourcesContent":["import \"./App.css\";\n\nimport React from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport {useSnackbar} from \"notistack\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ErrorIcon from '@material-ui/icons/Error';\n\nconst DISCORD_AUTH_URL = \"https://discord.com/oauth2/authorize?client_id={CLIENT_ID}&scope=bot&permissions={PERMISSIONS}\";\n\nexport default function App() {\n    const {enqueueSnackbar} = useSnackbar();\n\n    const PERMISSIONS = {\n        general: [\n            {id: 'p_administrator', name: 'Administrator', permission: 0x8, tfa: true, critical: true},\n            {id: 'p_audit_log', name: 'View Audit Log', permission: 0x80},\n            {id: 'p_server_insights', name: 'View Server Insights', permission: 0x80000},\n            {id: 'p_manage_server', name: 'Manage Server', permission: 0x20, tfa: true},\n            {id: 'p_manage_roles', name: 'Manage Roles', permission: 0x10000000, tfa: true},\n            {id: 'p_manage_channels', name: 'Manage Channels', permission: 0x10, tfa: true},\n            {id: 'p_kick_members', name: 'Kick Members', permission: 0x2, tfa: true},\n            {id: 'p_ban_members', name: 'Ban Members', permission: 0x4, tfa: true},\n            {id: 'p_invite', name: 'Create Invite', permission: 0x1},\n            {id: 'p_nickname', name: 'Change Nickname', permission: 0x4000000},\n            {id: 'p_manage_nicknames', name: 'Manage Nicknames', permission: 0x8000000},\n            {id: 'p_manage_emojis', name: 'Manage Emojis', permission: 0x40000000},\n            {id: 'p_manage_webhooks', name: 'Manage Webhooks', permission: 0x20000000, tfa: true},\n        ],\n\n        text: [\n            {id: 'p_view', name: 'View Channel', permission: 0x400},\n            {id: 'p_read_message', name: 'Read Messages', permission: 0x400},\n            {id: 'p_send_message', name: 'Send Messages', permission: 0x800},\n            {id: 'p_send_tts_message', name: 'Send TTS Messages', permission: 0x1000},\n            {id: 'p_manage_messages', name: 'Manage Messages', permission: 0x2000, tfa: true},\n            {id: 'p_embed_links', name: 'Embed Links', permission: 0x4000},\n            {id: 'p_attach_files', name: 'Attach Files', permission: 0x8000},\n            {id: 'p_message_history', name: 'Read Message History', permission: 0x10000},\n            {id: 'p_mention_all', name: 'Mention @everyone, @here and All Roles', permission: 0x20000},\n            {id: 'p_external_emojis', name: 'Use External Emojis', permission: 0x40000},\n            {id: 'p_add_reactions', name: 'Add Reactions', permission: 0x40},\n        ],\n\n        voice: [\n            {id: 'p_connect', name: 'Connect', permission: 0x100000},\n            {id: 'p_speak', name: 'Speak', permission: 0x200000},\n            {id: 'p_video', name: 'Video', permission: 0x200},\n            {id: 'p_mute', name: 'Mute Members', permission: 0x400000},\n            {id: 'p_deafen', name: 'Deafen Members', permission: 0x800000},\n            {id: 'p_move', name: 'Move Members', permission: 0x1000000},\n            {id: 'p_voice_activity', name: 'Use Voice Activity', permission: 0x2000000},\n            {id: 'p_priority_speaker', name: 'Priority Speaker', permission: 0x100},\n        ]\n    };\n    const RECOMMENDED_PERMISSIONS = {\n        general: [\n            {id: 'p_manage_channels', name: 'Manage Channels', permission: 0x10, tfa: true},\n            {id: 'p_kick_members', name: 'Kick Members', permission: 0x2, tfa: true},\n            {id: 'p_ban_members', name: 'Ban Members', permission: 0x4, tfa: true},\n        ],\n        text: [\n            {id: 'p_view', name: 'View Channel', permission: 0x400},\n            {id: 'p_read_message', name: 'Read Messages', permission: 0x400},\n            {id: 'p_send_message', name: 'Send Messages', permission: 0x800},\n            {id: 'p_manage_messages', name: 'Manage Messages', permission: 0x2000, tfa: true},\n            {id: 'p_message_history', name: 'Read Message History', permission: 0x10000},\n            {id: 'p_add_reactions', name: 'Add Reactions', permission: 0x40},\n        ]\n    };\n\n    function internalize(name) {\n        return name.toLowerCase().replace(' ', '_');\n    }\n\n    function calculatePermissions() {\n        let permissions = 0;\n\n        [...document.querySelectorAll('.p-option')].forEach(p => {\n            const perm = p.getAttribute('data-permission');\n            const checked = p.children[0].children[0].checked;\n\n            if (checked) {\n                permissions |= perm;\n            }\n        });\n\n        return permissions;\n    }\n\n    function selectRecommended() {\n        [...RECOMMENDED_PERMISSIONS['general'], ...RECOMMENDED_PERMISSIONS['text']].forEach(p => {\n           document.getElementById(internalize(p.id)).click();\n        });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const clientId = document.getElementById('client_id');\n\n        if (clientId.value === '') {\n            enqueueSnackbar('Client ID is invalid.', {variant: 'error'});\n            return;\n        }\n\n        const permissions = calculatePermissions();\n        console.log(\"Calculated Permissions = \", permissions);\n\n        if (permissions <= 0) {\n            enqueueSnackbar('No permissions selected.', {variant: 'error'});\n            return;\n        }\n\n        window.location.href = DISCORD_AUTH_URL.replace('{CLIENT_ID}', clientId.value).replace('{PERMISSIONS}', permissions.toString());\n    }\n\n    return (\n        <>\n            <div>\n                <header style={{textAlign: \"center\"}}>\n                    <Typography variant={\"h5\"} color={\"secondary\"}>Discord Bot Inviter</Typography>\n                    <Typography variant={\"body1\"} style={{color: '#ddd'}}>by <Link href={'https://github.com/Azoraqua'}\n                                                                                   color={\"primary\"}>Azoraqua</Link></Typography>\n                </header>\n\n                <main style={{marginTop: '35px'}}>\n                    <form noValidate autoComplete=\"off\" onSubmit={e => handleSubmit(e)}>\n                        <fieldset style={{textAlign: \"center\"}}>\n                            <legend>Client ID</legend>\n\n                            <FormGroup>\n                                <TextField id=\"client_id\" placeholder={\"000000000000000\"} color={\"secondary\"}/>\n                            </FormGroup>\n                        </fieldset>\n\n                        <fieldset style={{\n                            marginTop: '20px',\n\n                        }}>\n                            <legend style={{textAlign: 'center'}}>\n                                Permissions\n                            </legend>\n\n                            <div style={{ textAlign: \"center\", marginTop: '-40px' }}>\n                                <Button color={\"secondary\"} onClick={e => selectRecommended()}>Recommended</Button>\n                            </div>\n\n                            <div style={{ display: 'flex', marginTop: '25px'}}>\n                                <FormGroup style={{margin: '0 25px'}}>\n                                    <Typography variant={\"caption\"} color={\"secondary\"}>General</Typography>\n\n                                    {PERMISSIONS['general'].map(p => (\n                                        <FormControlLabel className={p.tfa ? 'tfa' : ''}\n                                                          key={`${p.id}`}\n                                                          control={<Checkbox id={`${internalize(p.id)}`}\n                                                                             name={`${internalize(p.id)}`}\n                                                                             data-permission={`${p.permission}`}\n                                                                             className={'p-option'}/>}\n                                                          label={<Typography variant={\"caption\"}>{p.name}{p.critical ?\n                                                              <Badge style={{color: '#fff', transform: 'scale(0.60)'}}\n                                                                     title={'Be careful when granting this permission because it will grant all permissions to the Discord Bot.'}><ErrorIcon/></Badge> : ''}</Typography>}\n                                        />\n                                    ))}\n                                </FormGroup>\n\n                                <FormGroup style={{margin: '0 25px'}}>\n                                    <Typography variant={\"caption\"} color={\"secondary\"}>Text</Typography>\n\n                                    {PERMISSIONS['text'].map(p => (\n                                        <FormControlLabel className={p.tfa ? 'tfa' : ''}\n                                                          key={`${p.id}`}\n                                                          control={<Checkbox id={`${internalize(p.id)}`}\n                                                                             name={`${internalize(p.id)}`}\n                                                                             data-permission={`${p.permission}`}\n                                                                             className={'p-option'}/>}\n                                                          label={<Typography variant={\"caption\"}>{p.name}</Typography>}\n                                        />\n                                    ))}\n                                </FormGroup>\n\n                                <FormGroup style={{margin: '0 25px'}}>\n                                    <Typography variant={\"caption\"} color={\"secondary\"}>Voice</Typography>\n\n                                    {PERMISSIONS['voice'].map(p => (\n                                        <FormControlLabel className={p.tfa ? 'tfa' : ''}\n                                                          key={`${p.id}`}\n                                                          control={<Checkbox id={`${internalize(p.id)}`}\n                                                                             name={`${internalize(p.id)}`}\n                                                                             data-permission={`${p.permission}`}\n                                                                             className={'p-option'}/>}\n                                                          label={<Typography variant={\"caption\"}>{p.name}</Typography>}\n                                        />\n                                    ))}\n                                </FormGroup>\n                            </div>\n\n                            <hr style={{ backgroundColor: '#444' }} />\n                            <ul style={{ listStyle: 'none', marginTop: '10px', marginLeft: '-40px', marginBottom: '0' }}>\n                                <li><Typography variant={\"caption\"} style={{ color: 'orange', fontSize: '24px' }}>&#9632;</Typography> <Typography variant={\"caption\"}>Requires the owner to have 2FA enabled but only when the server requires it.</Typography></li>\n                            </ul>\n                        </fieldset>\n\n                        <FormGroup style={{marginTop: '30px', marginBottom: '50px'}}>\n                            <Button type={\"submit\"} color={\"secondary\"}>Invite</Button>\n                        </FormGroup>\n                    </form>\n                </main>\n            </div>\n\n            <div id={'notepad'}></div>\n        </>\n    );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {SnackbarProvider} from \"notistack\";\n\nReactDOM.render(\n    <>\n        <SnackbarProvider maxSnack={3} preventDuplicate={true} autoHideDuration={1000} domRoot={document.getElementById('notepad')}>\n            <App/>\n        </SnackbarProvider>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}